plugins {
    id 'java'
}

group 'com.costacarol.cloudnative.tema8'
version '1.0-SNAPSHOT'
sourceCompatibility = 11

def karyonVersion = '2.9.2'
def springVersion = '5.2.9.RELEASE'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/groups/public/'}
    mavenLocal()
}

dependencies {
    implementation ([
            'org.springframework:spring-core:'+ springVersion,
            'org.springframework:spring-context:'+ springVersion,
            'org.springframework:spring-beans:'+ springVersion,
            'org.springframework:spring-test:'+ springVersion,
            'org.springframework:spring-web:'+ springVersion,
            'javax.ws.rs:javax.ws.rs-api:2.1.1',
            'io.reactivex:rxnetty:0.5.1',
            'io.netty:netty-codec-http:4.1.53.Final',
            'io.reactivex:rxjava:1.3.8',
            'com.netflix.karyon:karyon2-core:' + karyonVersion,
            'com.netflix.karyon:karyon2-admin-web:' + karyonVersion,
            'com.netflix.karyon:karyon2-admin:' + karyonVersion,
            'com.netflix.karyon:karyon2-governator:' + karyonVersion,
            'com.netflix.karyon:karyon2-eureka:' + karyonVersion,
            'com.netflix.karyon:karyon2-archaius:' + karyonVersion,
            'com.netflix.karyon:karyon2-servo:' + karyonVersion,
            'org.slf4j:slf4j-api:1.7.0',
            'org.slf4j:slf4j-simple:1.7.21'
    ])
    testImplementation(group: 'junit', name: 'junit', version: '4.12')
}

jar {
    archiveName("calculator.jar")
    manifest {
        attributes 'Main-class': 'com.costacarol.cloudnative.tema8.annotation.App'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA")
}
